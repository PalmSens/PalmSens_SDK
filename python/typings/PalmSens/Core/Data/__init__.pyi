import typing

from PalmSens.Data import DataArray, DataArrayFunc, IDataValue
from PalmSens.DataFiles import JsonBag
from PalmSens.Units import Unit
from System import Version

class DataArrayInverse(DataArrayFunc):
    @typing.overload
    def __init__(self, array: DataArray, title: str, unit: Unit) -> None: ...
    @typing.overload
    def __init__(self, bag: JsonBag, coreVersion: Version) -> None: ...
    IsFinished: bool
    OCPValue: float
    @property
    def ArrayType(self) -> int: ...
    @property
    def Count(self) -> int: ...
    @property
    def DataValueTypeStr(self) -> str: ...
    @property
    def Description(self) -> str: ...
    @Description.setter
    def Description(self, value: str) -> str: ...
    @property
    def Hidden(self) -> bool: ...
    @Hidden.setter
    def Hidden(self, value: bool) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Item(self) -> IDataValue: ...
    @Item.setter
    def Item(self, value: IDataValue) -> IDataValue: ...
    @property
    def MaxValue(self) -> float: ...
    @property
    def MinValue(self) -> float: ...
    @property
    def OrgDataArray(self) -> DataArray: ...
    @property
    def Unit(self) -> Unit: ...
    def Dispose(self) -> None: ...
    @staticmethod
    def GetDataArrayInverse(dataArray: DataArray) -> DataArray: ...
