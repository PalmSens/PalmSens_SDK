# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: Publish to PyPI

on:
  push:
    tags:
      - 'python-*'
  workflow_dispatch:

jobs:
  bump_version:
    permissions: write-all
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/python-')  # only bump on tag pushes

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip pip-tools setuptools bump-my-version

    - name: Set configuration
      run: |
        git config --global user.name "${GITHUB_ACTOR}"
        git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"

    - name: Get tag (strip python prefix)
      run: |
        echo "TAG=${GITHUB_REF_NAME#python-}" >> $GITHUB_ENV

    - name: Bump version to new tag
      run: |
        cd python
        bump-my-version bump --new-version ${{ env.TAG }} patch
        git commit -am "Bump version to: ${{ env.TAG }}"

    - name: Push back changes to main and tag
      run: |
        git tag --force $GITHUB_REF_NAME HEAD
        git push --force --tags
        git switch -C main
        git push --set-upstream -f origin main

  build:
    name: Build distribution
    runs-on: ubuntu-latest
    needs: bump_version

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
        ref: ${{ github.ref_name }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Install pypa/build
      run: |
        python -m pip install build --user

    - name: Build a binary wheel and a source tarball
      run: |
        cd python
        python3 -m build

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: python/dist/

  publish-to-pypi:
    name: Publish Python distribution to PyPI
    if: startsWith(github.ref, 'refs/tags/python-')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/pypalmsens
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
