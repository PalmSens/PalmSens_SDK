name: Tests for Python SDK

on:
  push:
    branches:
      - main
    paths:
      - 'python/**'
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    paths:
      - 'python/**'
  workflow_dispatch:

jobs:
  test:
    if: github.event.pull_request.draft == false
    name: Run Coverage and Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [
          # 'windows-latest',
          # 'macos-latest',
          'ubuntu-latest',
        ]
        python-version: ['3.10', '3.13']
    defaults:
      run:
        working-directory: ./python

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9'

      - uses: actions/cache@v3
        id: cache-virtualenv
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('python/pyproject.toml') }}

      - name: Install dependencies
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        run: |
          python -m pip install -e .[develop]

      - name: Test with pytest
        run: |
          coverage run -m pytest -m "not examples and not instrument"

      - name: Report coverage
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          coverage json
          $TOTAL = python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])"
          Add-Content -Path $env:GITHUB_ENV -Value "total=$TOTAL"
          $REPORT = coverage report
          Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value "### Total coverage: $TOTAL%"
          Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value "`n``````"
          Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value $REPORT
          Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value "`n``````"

      - name: Report coverage
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          coverage json
          export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
          echo "total=$TOTAL" >> $GITHUB_ENV
          echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY
          echo $'\n```' >> $GITHUB_STEP_SUMMARY
          coverage report >> $GITHUB_STEP_SUMMARY
          echo $'\n```' >> $GITHUB_STEP_SUMMARY
